{
  "name": "com.unity.entities",
  "displayName": "Entities",
  "version": "1.1.0-exp.1",
  "unity": "2022.3",
  "unityRelease": "0f1",
  "dependencies": {
    "com.unity.burst": "1.8.8",
    "com.unity.serialization": "3.1.1",
    "com.unity.collections": "2.3.0-exp.1",
    "com.unity.mathematics": "1.2.6",
    "com.unity.modules.assetbundle": "1.0.0",
    "com.unity.modules.audio": "1.0.0",
    "com.unity.modules.unitywebrequest": "1.0.0",
    "com.unity.test-framework.performance": "3.0.2",
    "com.unity.nuget.mono-cecil": "1.11.4",
    "com.unity.scriptablebuildpipeline": "1.20.2",
    "com.unity.profiling.core": "1.0.2"
  },
  "description": "The Entities package provides a modern Entity Component System (ECS) implementation with a basic set of systems and components made for Unity.",
  "keywords": [
    "entities",
    "dots",
    "unity"
  ],
  "_upm": {
    "changelog": "### Added\n\n* Added a \"Custom Transform System\" folder in the assets folder of the \"EntitiesSamples\" project.\n* missing documentation on search public api\n* Enabled model assets to be baked as prefabs using EntityPrefabReference.\n* Error DC0084 is generated when capturing a local variable in an Entities.ForEach that isn't used.\n* Add GetSharedComponentIndexManaged API\n* Added addition errors around improper use of SystemAPI methods with generic type arguments.\n* Search Keyword registration for entities preferences and settings.\n* `SystemAPI.Query<T>` now supports `WithSharedComponentFilterManaged<T>(T sharedComponent)` and `WithSharedComponentFilterManaged<T1, T2>(T1 sharedComponent1, T2 sharedComponent2)`.\n* `CompleteDependencyBeforeRW(SystemState state)` and `CompleteDependencyBeforeRO(SystemState state)` are added to the public `Unity.Entities.IAspectCreate<T>` interface in order to faciltiate changes to source-generated code. Implementations of these methods, like all existing methods in `Unity.Entities.IAspectCreate<T>`, will automatically be generated on users' behalf by source generators.\n* Added `IBaker.CreateAdditionalEntities` for creating multiple additional entities at once.\n* filter to search with SharedComponent from within the Hierarchy Window\n* filter to search with SharedComponent from within the Search Window\n* New `EntityQuery` component type constraint: `Present` components are required to be present on a query's matching archetypes, whether or not they are enabled or disabled on individual entities. This constraint can be added in all the usual places -- `EntityQueryBuilder.WithPresent<T>()`, `EntityQueryDesc.Present[]`, the `[WithPresent(typeof(T))]` attribute on `IJobEntity`, etc.\n* checks to see if an exclusive transaction is active while scheduling a job.\n* Specific error when capturing a variable in `Entities.ForEach` that relies on relies on source generators (since there is no deterministic order between source generators, this can be an error).\n\n### Changed\n\n* Significantly improved the performance of `EntityManager.SetSharedComponent<T>(EntityQuery,T)` and `EntityManager.SetSharedComponentManaged<T>(EntityQuery,T)`\n* `TypeManager.Initialize` will disable synchronous Burst compilation only during initialization of the TypeManager so that large synchronous compilation stalls when compiling function pointers can be avoided when iterating in the Editor.\n* BlobBuilder is now partial\n* CompanionGameObjectUpdateTransformSystem is now public\n* ResetUpdateAllocator is now public\n* SubSceneInspectorUtility is now public\n* Batch primary entity creation in baking.\n* `HasSingleton<T>()` and `TryGetSingleton<T>()` methods will now throw if they find >1 instance of `T`, instead of returning `false`. Having more than one instance of a singleton component indicates a bug in the program, and should fail more obviously.\n* The visibility of the `EnabledBitUtility` class was changed from `public` to `internal`. This class was never intended to be part of the public API of the Entities package, and should not be used by application code.\n* `EntityManager.AddChunkComponentData(EntityQuery,T)` no longer throws an exception if the component `T` is already present on any of the target chunks. Instead, the new value is assigned to the existing component. This matches the behavior of other AddComponent variants in the Entities package.\n* Text for exception that occurs when an entity doesn't exist during EntityCommandBuffer playback.\n* `IJobChunk` now allows indexed writes to native containers passed in the job struct. Only writes to the element at `unfilteredChunkIndex` are valid. To disable this check on a per-container basis, add `[NativeDisableParallelForRestriction]` to the relevant field in the job struct.\n\n### Deprecated\n\n* Deprecate GetSharedComponentDataIndex as it is a dupplicate of GetSharedComponentIndex\n\n### Removed\n\n* Removed gizmo rendering logic for entities from C#, now this is handled natively in Unity.\n* Marked `EntityManager.Instantiate(NativeArray<Entity> srcEntities, NativeArray<Entity> outputEntities)` as obsolete, with the intention to eventually remove it entirely.\n\n### Fixed\n\n* Code fix now available to rewrite offending code that trigger `CS1654` errors.\n* Fixed a typo in the \"LocalTransform\" summary comment.\n* Property drawer for arrays and lists of Weak(Object|Scene)Reference types\n* Compilation with DISABLE_ENTITIES_JOURNALING works again.\n* Ensure Component gizmos are rendered for GameObjects in SubScenes when rendered with Entities. That is when using Preferences->Entities->SceneView Mode -> Runtime Data.\n* Added null checks in BlobAssetReferenceData properties to avoid crashing the engine while inspecting variables with the debugger.\n* LocalTransform.FromMatrixSafe would throw exceptions for valid matricies\n* IJobEntity overwriting files due to colliding filenames.\n* Differ discards ChunkComponents added during baking.\n* Fixed issue with BakingVersion(true) triggering warnings in the console log about the attribute being missing on the type you placed this on in cases where named BakingVersion attributes are being used in the containing assembly.\n* A source generator error is not thrown anymore when using the fully qualified name of `SystemAPI.Time` (e.g. `Unity.Entities.SystemAPI.Time`).\n* The main entity in LinkedEntityGroups were not added in incremental baking.\n* Fix memory leak in the BakerEntityUsage not disposing properly the list of ReferencedEntityUsage\n* Fixed `isReadOnly` being ignored in `EntityManager.GetBuffer`.\n* ArgumentException on an unknown type when using the GetComponent API in a baker with an abstract type.\n* Subscenes no longer redundantly rebake on recompile due to type order changes.\n* Serialization of blob asset references in unmanaged shared components\n* `SystemGenerator` in the source-generation solution runs in ~48% less time when tested on a small game project shared by one of our users.\n* You now no longer get a compile error for methods containing SystemAPI, EFE, or IJE scheduling, that include a signature with nullables, multiple generics, or parameter modifiers.\n* KeyNotFoundException thrown by the  Entities.Editor.HierarchyWindow when loading a new gameobject scene\n* Users can now specify duplicate components in the same `IJobEntity.Execute()` method, insofar as exactly one of them is wrapped in `EnabledRef<T>`.\n* Fixed issue where ambiguous types used in a `SystemAPI.Query<T>()` call would generate a compiler error from source generators.\n* Entities Hierarchy: when entering playmode without fast enter playmode the hierarchy was showing the authoring datamode content even though the switch in the window header was showing the mixed datamode.\n* Validation for world's existence before accessing within EntityContainer and EntitySelectionProxy."
  },
  "upmCi": {
    "footprint": "685539d286ea7375559f1bddcc9805d9885bb432"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.entities@1.1/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
    "type": "git",
    "revision": "c3274ed2015eeec85914d62bfbd32e39f0dd112b"
  }
}
